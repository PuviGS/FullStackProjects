{"ast":null,"code":"var _jsxFileName = \"/home/puvi/Desktop/video-conference-app/client/src/components/VideoRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport './videoRoomStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction VideoRoom({\n  roomId,\n  userName\n}) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const localStream = useRef(null);\n  const videoRefs = useRef({});\n  const peerConnections = useRef({});\n  useEffect(() => {\n    const userId = Math.random().toString(36).substring(2);\n    const currentTime = new Date().toLocaleTimeString();\n    socket.emit('join-room', roomId, userId, userName, currentTime);\n    const setupLocalStream = async () => {\n      localStream.current = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n\n      // Update local video in UI\n      videoRefs.current[userId] = {\n        stream: localStream.current,\n        userName,\n        joinTime: currentTime\n      };\n      setUsers([{\n        userId,\n        userName,\n        joinTime: currentTime,\n        stream: localStream.current\n      }]);\n      socket.on('user-connected', (userId, userName, joinTime) => {\n        const peerConnection = new RTCPeerConnection();\n        localStream.current.getTracks().forEach(track => peerConnection.addTrack(track, localStream.current));\n        peerConnections.current[userId] = peerConnection;\n        peerConnection.ontrack = event => {\n          if (!videoRefs.current[userId]) {\n            videoRefs.current[userId] = {\n              userName,\n              joinTime,\n              stream: event.streams[0]\n            };\n            setUsers(users => [...users, {\n              userId,\n              userName,\n              joinTime,\n              stream: event.streams[0]\n            }]);\n          }\n        };\n        peerConnection.createOffer().then(offer => {\n          peerConnection.setLocalDescription(offer);\n          socket.emit('offer', userId, offer);\n        });\n      });\n      socket.on('offer', async (userId, offer) => {\n        const peerConnection = new RTCPeerConnection();\n        peerConnections.current[userId] = peerConnection;\n        peerConnection.ontrack = event => {\n          if (!videoRefs.current[userId]) {\n            videoRefs.current[userId] = {\n              userName: '',\n              joinTime: '',\n              stream: event.streams[0]\n            };\n            setUsers(users => [...users, {\n              userId,\n              userName: '',\n              joinTime: '',\n              stream: event.streams[0]\n            }]);\n          }\n        };\n        peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await peerConnection.createAnswer();\n        await peerConnection.setLocalDescription(answer);\n        socket.emit('answer', userId, answer);\n      });\n      socket.on('answer', (userId, answer) => {\n        peerConnections.current[userId].setRemoteDescription(new RTCSessionDescription(answer));\n      });\n      socket.on('user-disconnected', userId => {\n        if (peerConnections.current[userId]) peerConnections.current[userId].close();\n        delete peerConnections.current[userId];\n        setUsers(users => users.filter(user => user.userId !== userId));\n      });\n    };\n    setupLocalStream();\n    return () => {\n      if (localStream.current) {\n        localStream.current.getTracks().forEach(track => track.stop());\n      }\n\n      // Create a local variable for peerConnections.current\n      const currentPeerConnections = peerConnections.current;\n      Object.values(currentPeerConnections).forEach(pc => pc.close());\n    };\n  }, [roomId, userName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-room\",\n    children: users.map(({\n      userId,\n      userName,\n      joinTime,\n      stream\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoEl => {\n          if (videoEl && !videoEl.srcObject) {\n            videoEl.srcObject = stream;\n            videoEl.play();\n          }\n        },\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Joined at \", joinTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, userId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoRoom, \"fQ32CUof01xk8dzwCUnfD0Os//U=\");\n_c = VideoRoom;\nexport default VideoRoom;\nvar _c;\n$RefreshReg$(_c, \"VideoRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","VideoRoom","roomId","userName","_s","users","setUsers","localStream","videoRefs","peerConnections","userId","Math","random","toString","substring","currentTime","Date","toLocaleTimeString","emit","setupLocalStream","current","navigator","mediaDevices","getUserMedia","video","audio","stream","joinTime","on","peerConnection","RTCPeerConnection","getTracks","forEach","track","addTrack","ontrack","event","streams","createOffer","then","offer","setLocalDescription","setRemoteDescription","RTCSessionDescription","answer","createAnswer","close","filter","user","stop","currentPeerConnections","Object","values","pc","className","children","map","ref","videoEl","srcObject","play","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/puvi/Desktop/video-conference-app/client/src/components/VideoRoom.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport './videoRoomStyles.css';\n\nconst socket = io('http://localhost:5000');\n\nfunction VideoRoom({ roomId, userName }) {\n  const [users, setUsers] = useState([]);\n  const localStream = useRef(null);\n  const videoRefs = useRef({});\n  const peerConnections = useRef({});\n\n  useEffect(() => {\n    const userId = Math.random().toString(36).substring(2);\n    const currentTime = new Date().toLocaleTimeString();\n\n    socket.emit('join-room', roomId, userId, userName, currentTime);\n\n    const setupLocalStream = async () => {\n      localStream.current = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n\n      // Update local video in UI\n      videoRefs.current[userId] = { stream: localStream.current, userName, joinTime: currentTime };\n      setUsers([{ userId, userName, joinTime: currentTime, stream: localStream.current }]);\n\n      socket.on('user-connected', (userId, userName, joinTime) => {\n        const peerConnection = new RTCPeerConnection();\n        localStream.current.getTracks().forEach(track => peerConnection.addTrack(track, localStream.current));\n        peerConnections.current[userId] = peerConnection;\n\n        peerConnection.ontrack = (event) => {\n          if (!videoRefs.current[userId]) {\n            videoRefs.current[userId] = { userName, joinTime, stream: event.streams[0] };\n            setUsers(users => [...users, { userId, userName, joinTime, stream: event.streams[0] }]);\n          }\n        };\n\n        peerConnection.createOffer().then(offer => {\n          peerConnection.setLocalDescription(offer);\n          socket.emit('offer', userId, offer);\n        });\n      });\n\n      socket.on('offer', async (userId, offer) => {\n        const peerConnection = new RTCPeerConnection();\n        peerConnections.current[userId] = peerConnection;\n        peerConnection.ontrack = (event) => {\n          if (!videoRefs.current[userId]) {\n            videoRefs.current[userId] = { userName: '', joinTime: '', stream: event.streams[0] };\n            setUsers(users => [...users, { userId, userName: '', joinTime: '', stream: event.streams[0] }]);\n          }\n        };\n        peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await peerConnection.createAnswer();\n        await peerConnection.setLocalDescription(answer);\n        socket.emit('answer', userId, answer);\n      });\n\n      socket.on('answer', (userId, answer) => {\n        peerConnections.current[userId].setRemoteDescription(new RTCSessionDescription(answer));\n      });\n\n      socket.on('user-disconnected', (userId) => {\n        if (peerConnections.current[userId]) peerConnections.current[userId].close();\n        delete peerConnections.current[userId];\n        setUsers(users => users.filter(user => user.userId !== userId));\n      });\n    };\n\n    setupLocalStream();\n\n    return () => {\n      if (localStream.current) {\n        localStream.current.getTracks().forEach(track => track.stop());\n      }\n\n      // Create a local variable for peerConnections.current\n      const currentPeerConnections = peerConnections.current;\n\n      Object.values(currentPeerConnections).forEach(pc => pc.close());\n    };\n  }, [roomId, userName]);\n\n  return (\n    <div className=\"video-room\">\n      {users.map(({ userId, userName, joinTime, stream }) => (\n        <div key={userId} className=\"video-container\">\n          <video\n            ref={(videoEl) => {\n              if (videoEl && !videoEl.srcObject) {\n                videoEl.srcObject = stream;\n                videoEl.play();\n              }\n            }}\n            autoPlay playsInline\n          />\n          <div className=\"user-details\">\n            <p>{userName}</p>\n            <small>Joined at {joinTime}</small>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default VideoRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}