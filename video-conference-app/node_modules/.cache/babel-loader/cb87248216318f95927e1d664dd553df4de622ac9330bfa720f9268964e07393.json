{"ast":null,"code":"var _jsxFileName = \"/home/puvi/Desktop/video-conference-app/client/src/components/VideoRoom.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction VideoRoom({\n  roomId,\n  userName\n}) {\n  _s();\n  const [participants, setParticipants] = useState([]);\n  const videoRefs = useRef({});\n  useEffect(() => {\n    const userId = Math.random().toString(36).substring(2);\n    socket.emit('join-room', roomId, userName);\n\n    // Get video/audio stream\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      // Set video stream for current user\n      videoRefs.current[userId].srcObject = stream;\n\n      // When a new user joins, add them to participants list\n      socket.on('user-connected', ({\n        userName,\n        joinTime\n      }) => {\n        setParticipants(prevParticipants => [...prevParticipants, {\n          userId,\n          userName,\n          joinTime\n        }]);\n      });\n\n      // Handle user disconnect\n      socket.on('user-disconnected', userName => {\n        setParticipants(prevParticipants => prevParticipants.filter(participant => participant.userName !== userName));\n      });\n    });\n  }, [roomId, userName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-room\",\n    children: participants.map(({\n      userId,\n      userName,\n      joinTime\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      style: {\n        width: `${100 / participants.length}%`\n      } // Dynamically resize based on number of participants\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: el => videoRefs.current[userId] = el,\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Joined at \", joinTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, userId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoRoom, \"0AGgEv6xzAuxmX5hdu4jl2QT4BI=\");\n_c = VideoRoom;\nexport default VideoRoom;\nvar _c;\n$RefreshReg$(_c, \"VideoRoom\");","map":{"version":3,"names":["useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","VideoRoom","roomId","userName","_s","participants","setParticipants","videoRefs","userId","Math","random","toString","substring","emit","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","on","joinTime","prevParticipants","filter","participant","className","children","map","style","width","length","ref","el","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/puvi/Desktop/video-conference-app/client/src/components/VideoRoom.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport './styles.css';\n\nconst socket = io('http://localhost:5000');\n\nfunction VideoRoom({ roomId, userName }) {\n  const [participants, setParticipants] = useState([]);\n  const videoRefs = useRef({});\n\n  useEffect(() => {\n    const userId = Math.random().toString(36).substring(2);\n    socket.emit('join-room', roomId, userName);\n\n    // Get video/audio stream\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\n      // Set video stream for current user\n      videoRefs.current[userId].srcObject = stream;\n\n      // When a new user joins, add them to participants list\n      socket.on('user-connected', ({ userName, joinTime }) => {\n        setParticipants((prevParticipants) => [\n          ...prevParticipants,\n          { userId, userName, joinTime },\n        ]);\n      });\n\n      // Handle user disconnect\n      socket.on('user-disconnected', (userName) => {\n        setParticipants((prevParticipants) =>\n          prevParticipants.filter((participant) => participant.userName !== userName)\n        );\n      });\n    });\n  }, [roomId, userName]);\n\n  return (\n    <div className=\"video-room\">\n      {participants.map(({ userId, userName, joinTime }) => (\n        <div\n          key={userId}\n          className=\"video-container\"\n          style={{ width: `${100 / participants.length}%` }} // Dynamically resize based on number of participants\n        >\n          <video ref={(el) => (videoRefs.current[userId] = el)} autoPlay playsInline></video>\n          <div className=\"user-info\">\n            <h4>{userName}</h4>\n            <p>Joined at {joinTime}</p>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default VideoRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}