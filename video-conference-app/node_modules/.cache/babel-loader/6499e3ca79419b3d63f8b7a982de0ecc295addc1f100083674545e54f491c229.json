{"ast":null,"code":"var _jsxFileName = \"/home/puvi/Desktop/video-conference-app/client/src/components/VideoRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction VideoRoom({\n  roomId,\n  userName\n}) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const videoRefs = useRef({});\n  const peerConnections = {};\n  useEffect(() => {\n    const userId = Math.random().toString(36).substring(2);\n    const currentTime = new Date().toLocaleTimeString();\n\n    // Notify server about joining the room\n    socket.emit('join-room', roomId, userId, userName, currentTime);\n\n    // Set up media devices for video and audio\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      videoRefs.current[userId] = {\n        stream,\n        userName,\n        joinTime: currentTime\n      };\n      updateUserVideos();\n      socket.on('user-connected', (userId, userName, joinTime) => {\n        // Add new user to the video conference\n        videoRefs.current[userId] = {\n          userName,\n          joinTime\n        };\n        const peerConnection = new RTCPeerConnection();\n        stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n        peerConnections[userId] = peerConnection;\n\n        // Update state\n        updateUserVideos();\n      });\n      socket.on('user-disconnected', userId => {\n        if (peerConnections[userId]) peerConnections[userId].close();\n        delete peerConnections[userId];\n        delete videoRefs.current[userId];\n        updateUserVideos();\n      });\n    });\n    const updateUserVideos = () => {\n      setUsers(Object.entries(videoRefs.current).map(([id, details]) => ({\n        userId: id,\n        userName: details.userName,\n        joinTime: details.joinTime,\n        stream: details.stream\n      })));\n    };\n  }, [roomId, userName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-room\",\n    children: users.map(({\n      userId,\n      userName,\n      joinTime,\n      stream\n    }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      style: {\n        flexBasis: `${100 / users.length}%`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoEl => {\n          if (videoEl && !videoEl.srcObject) {\n            videoEl.srcObject = stream;\n            videoEl.play();\n          }\n        },\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Joined at \", joinTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, userId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoRoom, \"kQoVc3vt0foNp2xSbn7E+bGrVW4=\");\n_c = VideoRoom;\nexport default VideoRoom;\nvar _c;\n$RefreshReg$(_c, \"VideoRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","VideoRoom","roomId","userName","_s","users","setUsers","videoRefs","peerConnections","userId","Math","random","toString","substring","currentTime","Date","toLocaleTimeString","emit","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","joinTime","updateUserVideos","on","peerConnection","RTCPeerConnection","getTracks","forEach","track","addTrack","close","Object","entries","map","id","details","className","children","index","style","flexBasis","length","ref","videoEl","srcObject","play","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/puvi/Desktop/video-conference-app/client/src/components/VideoRoom.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport './styles.css';\n\nconst socket = io('http://localhost:5000');\n\nfunction VideoRoom({ roomId, userName }) {\n  const [users, setUsers] = useState([]);\n  const videoRefs = useRef({});\n  const peerConnections = {};\n\n  useEffect(() => {\n    const userId = Math.random().toString(36).substring(2);\n    const currentTime = new Date().toLocaleTimeString();\n\n    // Notify server about joining the room\n    socket.emit('join-room', roomId, userId, userName, currentTime);\n\n    // Set up media devices for video and audio\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n      videoRefs.current[userId] = { stream, userName, joinTime: currentTime };\n      updateUserVideos();\n\n      socket.on('user-connected', (userId, userName, joinTime) => {\n        // Add new user to the video conference\n        videoRefs.current[userId] = { userName, joinTime };\n        const peerConnection = new RTCPeerConnection();\n        stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n        peerConnections[userId] = peerConnection;\n\n        // Update state\n        updateUserVideos();\n      });\n\n      socket.on('user-disconnected', (userId) => {\n        if (peerConnections[userId]) peerConnections[userId].close();\n        delete peerConnections[userId];\n        delete videoRefs.current[userId];\n        updateUserVideos();\n      });\n    });\n\n    const updateUserVideos = () => {\n      setUsers(Object.entries(videoRefs.current).map(([id, details]) => ({\n        userId: id,\n        userName: details.userName,\n        joinTime: details.joinTime,\n        stream: details.stream\n      })));\n    };\n\n  }, [roomId, userName]);\n\n  return (\n    <div className=\"video-room\">\n      {users.map(({ userId, userName, joinTime, stream }, index) => (\n        <div key={userId} className=\"video-container\" style={{ flexBasis: `${100 / users.length}%` }}>\n          <video ref={videoEl => {\n            if (videoEl && !videoEl.srcObject) {\n              videoEl.srcObject = stream;\n              videoEl.play();\n            }\n          }} autoPlay playsInline />\n          <div className=\"user-details\">\n            <p>{userName}</p>\n            <small>Joined at {joinTime}</small>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default VideoRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}